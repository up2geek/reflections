How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Filter out all the unchanged lines so there was less to look through

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Spend less time looking for bugs.
    Keep less copies of those files laying around.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: It will save a working version even if you forget to and provide more versions to restore to.
    Cons: It might save in the middle of lines which saves a non working version of code that doesn't make sense.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because they are more oriented towards programming where multiple files are interconnected.
    Where as google docs is for single documents.

How can you use the commands git log and git diff to view the history of files?

    git log will show all the different commits
    git diff will show the differences between two commits

How might using version control make you more confident to make changes that
could break something?

    You can jump to different versions to see if the bug or break is present.
    Then do a git diff between those two commits to see where the bug might be.

Now that you have your workspace set up, what do you want to try using Git for?

    Version tracking of all my coding projects:
    Java
    Android
    Powershell
